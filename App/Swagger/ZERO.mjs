//Add Auth
export default {
  swagger: "2.0",
  info: {
    version: "1.0.0",
    title: "BIGO API",
    description:
      "I see your trying to access this interactive API Testing, Here you go!, I hope it makes your life easier <3, \nEvery request should contain a unique tag header that is randomly generated and encrypted on the receiver using JWT with the key 21321f12edqwf23rf2312e12312r12e1. \nThis is the only way to verify the request. The key should be kept exclusively in the receiver, not in the API. Ensure that the encrypted text is randomly generated and unique for each request. \nAnd please keep in mind that there will be a message key for every request that will have the message for the receiver user, \nso it should show if an error status code is present. The idea of the API is that you get the categories, which are the main categories to choose from, \nand then there are the sub-categories inside, shown on the left, normally. \nThen there are the items. To watch On click, you create a session, and then you use the session API to return a movie or live or series, to watch it. \nAnd each session can be used only once. Use the tag header to verify the request.",
  },
  schemes: ["http"],
  paths: {
    "/Categories": {
      get: {
        description: "This API, returns all the categories.",
        parameters: [
          {
            name: "MacAddress",
            in: "header",
            description:
              "This is merely a demonstration. Please keep in mind that in the right situation, this field is dynamic. This is a field of security.",
            required: true,
            type: "string",
            default: "00:00:10:7e:db:72",
          },
          {
            name: "SerialNumber",
            in: "header",
            description:
              "This is merely a demonstration. Please keep in mind that in the right situation, this field is dynamic. This is a field of security.",
            required: true,
            type: "string",
            default: "511025800000",
          },
          {
            name: "Code",
            in: "header",
            description:
              "This is merely a demonstration. Please keep in mind that in the right situation, this field is dynamic. This is a field of security.",
            required: true,
            type: "string",
            //Set default value
            default: "2222222222222",
          },
          {
            name: "Tag",
            in: "header",
            description:
              "This Tag should always be a JWT token. This is a field of security, And it should be a random string generated by the receiver it can be anything from Special Characters to anything ever, And it always always! should be Unique for every request, For now its disabled for the testing, Purposes, But make sure it is included in the request, And the key to use is in the above instructions, Please use https://jwt.io/ to see the format of the JSON OBJECT Inside the Token! And the implementation of the JWT is in the https://jwt.io/libraries",
            required: true,
            type: "string",
            default:
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IlFXRlFSS08hQEYhQE9KI0dPQFAjIiwiaWF0IjoxNTE2MjM5MDIyfQ.7Y12xYLLMyRQ7AJxro1qV-Lgf1rf3xH8pd5ZR90Hajw",
          },
        ],
        responses: {
          401: {
            description: "Unauthorized",
          },
          500: {
            description: "Internal Server Error",
          },
          404: {
            description: "Not Found",
          },
          200: {
            description: "OK",
          },
          403: {
            description: "Forbidden",
          },
        },
      },
    },
    "/SubCategories/{Category}": {
      get: {
        description: "This API, returns the sub-categories of the category.",
        parameters: [
          {
            name: "Category",
            in: "path",
            required: true,
            type: "string",
            default: "624fe2ca83b5eecccbc9a075",
          },
          {
            name: "MacAddress",
            in: "header",
            description:
              "This is merely a demonstration. Please keep in mind that in the right situation, this field is dynamic. This is a field of security.",
            required: true,
            type: "string",
            default: "00:00:10:7e:db:72",
          },
          {
            name: "SerialNumber",
            in: "header",
            description:
              "This is merely a demonstration. Please keep in mind that in the right situation, this field is dynamic. This is a field of security.",
            required: true,
            type: "string",
            default: "511025800000",
          },
          {
            name: "Code",
            in: "header",
            description:
              "This is merely a demonstration. Please keep in mind that in the right situation, this field is dynamic. This is a field of security.",
            required: true,
            type: "string",
            //Set default value
            default: "2222222222222",
          },
          {
            name: "Tag",
            in: "header",
            description:
              "This Tag should always be a JWT token. This is a field of security, And it should be a random string generated by the receiver it can be anything from Special Characters to anything ever, And it always always! should be Unique for every request, For now its disabled for the testing, Purposes, But make sure it is included in the request, And the key to use is in the above instructions, Please use https://jwt.io/ to see the format of the JSON OBJECT Inside the Token! And the implementation of the JWT is in the https://jwt.io/libraries",
            required: true,
            type: "string",
            default:
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IlFXRlFSS08hQEYhQE9KI0dPQFAjIiwiaWF0IjoxNTE2MjM5MDIyfQ.7Y12xYLLMyRQ7AJxro1qV-Lgf1rf3xH8pd5ZR90Hajw",
          },
        ],
        responses: {
          401: {
            description: "Unauthorized",
          },
          500: {
            description: "Internal Server Error",
          },
          404: {
            description: "Not Found",
          },
          200: {
            description: "OK",
          },
          403: {
            description: "Forbidden",
          },
        },
      },
    },
    "/Movies/{SubCategory}": {
      get: {
        description: "This API, Gets the Movies of the sub-category",
        parameters: [
          {
            name: "SubCategory",
            in: "path",
            required: true,
            type: "string",
            default: "6253769960dfd9331c9b60da",
          },
          {
            name: "MacAddress",
            in: "header",
            description:
              "This is merely a demonstration. Please keep in mind that in the right situation, this field is dynamic. This is a field of security.",
            required: true,
            type: "string",
            default: "00:00:10:7e:db:72",
          },
          {
            name: "SerialNumber",
            in: "header",
            description:
              "This is merely a demonstration. Please keep in mind that in the right situation, this field is dynamic. This is a field of security.",
            required: true,
            type: "string",
            default: "511025800000",
          },
          {
            name: "Code",
            in: "header",
            description:
              "This is merely a demonstration. Please keep in mind that in the right situation, this field is dynamic. This is a field of security.",
            required: true,
            type: "string",
            //Set default value
            default: "2222222222222",
          },
          {
            name: "Tag",
            in: "header",
            description:
              "This Tag should always be a JWT token. This is a field of security, And it should be a random string generated by the receiver it can be anything from Special Characters to anything ever, And it always always! should be Unique for every request, For now its disabled for the testing, Purposes, But make sure it is included in the request, And the key to use is in the above instructions, Please use https://jwt.io/ to see the format of the JSON OBJECT Inside the Token! And the implementation of the JWT is in the https://jwt.io/libraries",
            required: true,
            type: "string",
            default:
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IlFXRlFSS08hQEYhQE9KI0dPQFAjIiwiaWF0IjoxNTE2MjM5MDIyfQ.7Y12xYLLMyRQ7AJxro1qV-Lgf1rf3xH8pd5ZR90Hajw",
          },
        ],
        responses: {
          401: {
            description: "Unauthorized",
          },
          500: {
            description: "Internal Server Error",
          },
          404: {
            description: "Not Found",
          },
          200: {
            description: "OK",
          },
          403: {
            description: "Forbidden",
          },
        },
      },
    },
    "/Lives/{SubCategory}": {
      get: {
        description: "This API, Gets the Lives of the sub-category",
        parameters: [
          {
            name: "SubCategory",
            in: "path",
            required: true,
            type: "string",
            default: "6253769960dfd9331c9b60da",
          },
          {
            name: "MacAddress",
            in: "header",
            description:
              "This is merely a demonstration. Please keep in mind that in the right situation, this field is dynamic. This is a field of security.",
            required: true,
            type: "string",
            default: "00:00:10:7e:db:72",
          },
          {
            name: "SerialNumber",
            in: "header",
            description:
              "This is merely a demonstration. Please keep in mind that in the right situation, this field is dynamic. This is a field of security.",
            required: true,
            type: "string",
            default: "511025800000",
          },
          {
            name: "Code",
            in: "header",
            description:
              "This is merely a demonstration. Please keep in mind that in the right situation, this field is dynamic. This is a field of security.",
            required: true,
            type: "string",
            //Set default value
            default: "2222222222222",
          },
          {
            name: "Tag",
            in: "header",
            description:
              "This Tag should always be a JWT token. This is a field of security, And it should be a random string generated by the receiver it can be anything from Special Characters to anything ever, And it always always! should be Unique for every request, For now its disabled for the testing, Purposes, But make sure it is included in the request, And the key to use is in the above instructions, Please use https://jwt.io/ to see the format of the JSON OBJECT Inside the Token! And the implementation of the JWT is in the https://jwt.io/libraries",
            required: true,
            type: "string",
            default:
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IlFXRlFSS08hQEYhQE9KI0dPQFAjIiwiaWF0IjoxNTE2MjM5MDIyfQ.7Y12xYLLMyRQ7AJxro1qV-Lgf1rf3xH8pd5ZR90Hajw",
          },
        ],
        responses: {
          401: {
            description: "Unauthorized",
          },
          500: {
            description: "Internal Server Error",
          },
          404: {
            description: "Not Found",
          },
          200: {
            description: "OK",
          },
          403: {
            description: "Forbidden",
          },
        },
      },
    },
    "/Series/{SubCategory}": {
      get: {
        description: "This API, Gets the series of the sub-category",
        parameters: [
          {
            name: "SubCategory",
            in: "path",
            required: true,
            type: "string",
            default: "6253769960dfd9331c9b60da",
          },
          {
            name: "MacAddress",
            in: "header",
            description:
              "This is merely a demonstration. Please keep in mind that in the right situation, this field is dynamic. This is a field of security.",
            required: true,
            type: "string",
            default: "00:00:10:7e:db:72",
          },
          {
            name: "SerialNumber",
            in: "header",
            description:
              "This is merely a demonstration. Please keep in mind that in the right situation, this field is dynamic. This is a field of security.",
            required: true,
            type: "string",
            default: "511025800000",
          },
          {
            name: "Code",
            in: "header",
            description:
              "This is merely a demonstration. Please keep in mind that in the right situation, this field is dynamic. This is a field of security.",
            required: true,
            type: "string",
            //Set default value
            default: "2222222222222",
          },
          {
            name: "Tag",
            in: "header",
            description:
              "This Tag should always be a JWT token. This is a field of security, And it should be a random string generated by the receiver it can be anything from Special Characters to anything ever, And it always always! should be Unique for every request, For now its disabled for the testing, Purposes, But make sure it is included in the request, And the key to use is in the above instructions, Please use https://jwt.io/ to see the format of the JSON OBJECT Inside the Token! And the implementation of the JWT is in the https://jwt.io/libraries",
            required: true,
            type: "string",
            default:
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IlFXRlFSS08hQEYhQE9KI0dPQFAjIiwiaWF0IjoxNTE2MjM5MDIyfQ.7Y12xYLLMyRQ7AJxro1qV-Lgf1rf3xH8pd5ZR90Hajw",
          },
        ],
        responses: {
          401: {
            description: "Unauthorized",
          },
          500: {
            description: "Internal Server Error",
          },
          404: {
            description: "Not Found",
          },
          200: {
            description: "OK",
          },
          403: {
            description: "Forbidden",
          },
        },
      },
    },
    "/Series/Episodes/{Series}": {
      get: {
        description: "This API, Gets the episodes of a series",
        parameters: [
          {
            name: "Series",
            in: "path",
            required: true,
            type: "string",
            default: "6253769960dfd9331c9b60db",
          },
          {
            name: "MacAddress",
            in: "header",
            description:
              "This is merely a demonstration. Please keep in mind that in the right situation, this field is dynamic. This is a field of security.",
            required: true,
            type: "string",
            default: "00:00:10:7e:db:72",
          },
          {
            name: "SerialNumber",
            in: "header",
            description:
              "This is merely a demonstration. Please keep in mind that in the right situation, this field is dynamic. This is a field of security.",
            required: true,
            type: "string",
            default: "511025800000",
          },
          {
            name: "Code",
            in: "header",
            description:
              "This is merely a demonstration. Please keep in mind that in the right situation, this field is dynamic. This is a field of security.",
            required: true,
            type: "string",
            //Set default value
            default: "2222222222222",
          },
          {
            name: "Tag",
            in: "header",
            description:
              "This Tag should always be a JWT token. This is a field of security, And it should be a random string generated by the receiver it can be anything from Special Characters to anything ever, And it always always! should be Unique for every request, For now its disabled for the testing, Purposes, But make sure it is included in the request, And the key to use is in the above instructions, Please use https://jwt.io/ to see the format of the JSON OBJECT Inside the Token! And the implementation of the JWT is in the https://jwt.io/libraries",
            required: true,
            type: "string",
            default:
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IlFXRlFSS08hQEYhQE9KI0dPQFAjIiwiaWF0IjoxNTE2MjM5MDIyfQ.7Y12xYLLMyRQ7AJxro1qV-Lgf1rf3xH8pd5ZR90Hajw",
          },
        ],
        responses: {
          401: {
            description: "Unauthorized",
          },
          500: {
            description: "Internal Server Error",
          },
          404: {
            description: "Not Found",
          },
          200: {
            description: "OK",
          },
          403: {
            description: "Forbidden",
          },
        },
      },
    },
    "/Sessions/Create/{EpisodeID}/{Type}": {
      get: {
        description: "",
        parameters: [
          {
            name: "EpisodeID",
            in: "path",
            required: true,
            type: "string",
            description: 'This is the Series Episode || Movie || Live, "ID".',
            default: "6253769a60dfd9331c9b60dc",
          },
          {
            name: "Type",
            in: "path",
            type: "string",
            default: "Series",
            required: true,
            description:
              "We have Series || Movies || Lives, and each one generates the appropriate session for the corresponding episode || Movie || Live.",
          },
          {
            name: "MacAddress",
            in: "header",
            description:
              "This is merely a demonstration. Please keep in mind that in the right situation, this field is dynamic. This is a field of security.",
            required: true,
            type: "string",
            default: "00:00:10:7e:db:72",
          },
          {
            name: "SerialNumber",
            in: "header",
            description:
              "This is merely a demonstration. Please keep in mind that in the right situation, this field is dynamic. This is a field of security.",
            required: true,
            type: "string",
            default: "511025800000",
          },
          {
            name: "Code",
            in: "header",
            description:
              "This is merely a demonstration. Please keep in mind that in the right situation, this field is dynamic. This is a field of security.",
            required: true,
            type: "string",
            //Set default value
            default: "2222222222222",
          },
          {
            name: "Tag",
            in: "header",
            description:
              "This Tag should always be a JWT token. This is a field of security, And it should be a random string generated by the receiver it can be anything from Special Characters to anything ever, And it always always! should be Unique for every request, For now its disabled for the testing, Purposes, But make sure it is included in the request, And the key to use is in the above instructions, Please use https://jwt.io/ to see the format of the JSON OBJECT Inside the Token! And the implementation of the JWT is in the https://jwt.io/libraries",
            required: true,
            type: "string",
            default:
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IlFXRlFSS08hQEYhQE9KI0dPQFAjIiwiaWF0IjoxNTE2MjM5MDIyfQ.7Y12xYLLMyRQ7AJxro1qV-Lgf1rf3xH8pd5ZR90Hajw",
          },
        ],
        responses: {
          401: {
            description: "Unauthorized",
          },
          500: {
            description: "Internal Server Error",
          },
          404: {
            description: "Not Found",
          },
          200: {
            description: "OK",
          },
          403: {
            description: "Forbidden",
          },
        },
      },
    },
    "/Sessions/{id}": {
      get: {
        description: "",
        parameters: [
          {
            name: "id",
            in: "path",
            required: true,
            type: "string",
            description:
              "This is the Session ID, You created, Using the Create Session API.",
          },
          {
            name: "Range",
            in: "header",
            type: "string",
            default: "0-0",
            required: true,
            description:
              "The data set's range, It begins at 0-0. And keep incrementing like 0-1, 0-2, 0-3, 0-4, as required at the beginning of the request. Then you can choose to ignore this header. It's best if you fill it out!",
          },
          {
            name: "MacAddress",
            in: "header",
            description:
              "This is merely a demonstration. Please keep in mind that in the right situation, this field is dynamic. This is a field of security.",
            required: true,
            type: "string",
            default: "00:00:10:7e:db:72",
          },
          {
            name: "SerialNumber",
            in: "header",
            description:
              "This is merely a demonstration. Please keep in mind that in the right situation, this field is dynamic. This is a field of security.",
            required: true,
            type: "string",
            default: "511025800000",
          },
          {
            name: "Code",
            in: "header",
            description:
              "This is merely a demonstration. Please keep in mind that in the right situation, this field is dynamic. This is a field of security.",
            required: true,
            type: "string",
            default: "2222222222222",
          },
          {
            name: "Tag",
            in: "header",
            description:
              "This Tag should always be a JWT token. This is a field of security, And it should be a random string generated by the receiver it can be anything from Special Characters to anything ever, And it always always! should be Unique for every request, For now its disabled for the testing, Purposes, But make sure it is included in the request, And the key to use is in the above instructions, Please use https://jwt.io/ to see the format of the JSON OBJECT Inside the Token! And the implementation of the JWT is in the https://jwt.io/libraries",
            required: true,
            type: "string",
            default:
              "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IlFXRlFSS08hQEYhQE9KI0dPQFAjIiwiaWF0IjoxNTE2MjM5MDIyfQ.7Y12xYLLMyRQ7AJxro1qV-Lgf1rf3xH8pd5ZR90Hajw",
          },
        ],
        responses: {
          401: {
            description: "Unauthorized",
          },
          404: {
            description: "Not Found",
          },
          500: {
            description: "Internal Server Error",
          },
          206: {
            description: "Partial Content",
            content: {
              "video/mp4": {
                schema: {
                  type: "string",
                  format: "binary",
                },
              },
            },
            200: {
              description: "OK",
            },
            403: {
              description: "Forbidden",
            },
          },
        },
      },
    },
  },
};
